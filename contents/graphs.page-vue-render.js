
    var pageVueRenderFn = function anonymous(
) {
with(this){return _c('div',{attrs:{"id":"app"}},[_c('header',{attrs:{"sticky":""}},[_c('navbar',{attrs:{"type":"dark"},scopedSlots:_u([{key:"brand",fn:function(){return [_c('a',{staticClass:"navbar-brand",attrs:{"href":"/Tech-Interviews-101/index.html","title":"Home"}},[_v("CS4269: Tech Interviews 101")])]},proxy:true},{key:"right",fn:function(){return [_c('li',[_c('form',{staticClass:"navbar-form"},[_c('searchbar',{attrs:{"data":searchData,"placeholder":"Search","on-hit":searchCallback,"menu-align-right":""}})],1)])]},proxy:true}])},[_v(" "),_c('dropdown',{staticClass:"nav-link",scopedSlots:_u([{key:"header",fn:function(){return [_v("Algorithms")]},proxy:true}])},[_v(" "),_c('li',[_c('a',{staticClass:"dropdown-item",attrs:{"href":"/Tech-Interviews-101/contents/arrays.html"}},[_v("Arrays")])]),_v(" "),_c('li',[_c('a',{staticClass:"dropdown-item",attrs:{"href":"/Tech-Interviews-101/contents/trees.html"}},[_v("Trees")])]),_v(" "),_c('li',[_c('a',{staticClass:"dropdown-item",attrs:{"href":"/Tech-Interviews-101/contents/hashing.html"}},[_v("Hashing")])]),_v(" "),_c('li',[_c('a',{staticClass:"dropdown-item",attrs:{"href":"/Tech-Interviews-101/contents/graphs.html"}},[_v("Graphs")])]),_v(" "),_c('li',[_c('a',{staticClass:"dropdown-item",attrs:{"href":"/Tech-Interviews-101/contents/dynamic.html"}},[_v("Dynamic Programming")])])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/Tech-Interviews-101/contents/sql.html"}},[_v("SQL")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/Tech-Interviews-101/contents/systems.html"}},[_v("System Design")])])],1)],1),_v(" "),_c('div',{attrs:{"id":"flex-body"}},[_c('overlay-source',{attrs:{"id":"site-nav","tag-name":"nav","to":"site-nav"}},[_c('div',{staticClass:"site-nav-top"},[_c('div',{staticClass:"fw-bold mb-2",staticStyle:{"font-size":"1.25rem"}},[_v("Contents")])]),_v(" "),_c('div',{staticClass:"nav-component slim-scroll"},[_c('site-nav',[_c('overlay-source',{staticClass:"site-nav-list site-nav-list-root",attrs:{"tag-name":"ul","to":"mb-site-nav"}},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/index.html"}},[_v("Home üè†")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/intro.html"}},[_v("Introduction")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/arrays.html"}},[_v("Arrays")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/trees.html"}},[_v("Trees")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/hashing.html"}},[_v("Hashing")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/graphs.html"}},[_v("Graphs")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/dynamic.html"}},[_v("Dynamic Programming")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/sql.html"}},[_v("SQL")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/Tech-Interviews-101/contents/systems.html"}},[_v("System Design")])])])])],1)],1),_v(" "),_c('collapse-expand-buttons')],1),_v(" "),_c('div',{attrs:{"id":"content-wrapper"}},[_c('breadcrumb'),_v(" "),_c('br'),_v(" "),_m(0),_v(" "),_c('p',[_v("Another very common topic tested in Leetcode is graphs. Graphs build upon arrays by introducing 2 dimensions, and having relations between elements/nodes.")]),_v(" "),_m(1),_v(" "),_c('p',[_v("Most undirected graphs in Leetcode questions can be modelled as a simple 2D-array or matrix. Which can then be queried by: arr[\"row\"][\"col\"]")]),_v(" "),_c('p',[_v("Nodes can be represented by numbers with state:")]),_v(" "),_m(2),_v(" "),_c('p',[_v("We can then express directions in the graph as such:")]),_v(" "),_m(3),_c('p',[_v("Its important to define the matrix bounds at the start, in the above example, m and n are the bounds for the rows and cols respectively.")]),_v(" "),_m(4),_v(" "),_c('p',[_v("Breadth First Search uses a queue structure (FIFO) to iterate through frontiers in a graph.")]),_v(" "),_m(5),_v(" "),_c('p',[_v("Pseudocode for BFS is as follows:")]),_v(" "),_m(6),_m(7),_v(" "),_c('p',[_v("Depth First Search uses the idea of backtracking to traverse through a graph.\nIt uses a stack instead of a queue.")]),_v(" "),_c('p',[_v("DFS has the same (worst case) time complexity as DFS at O(V+E), however it is slightly better for cases where the target/end node is far away from the start node.")]),_v(" "),_m(8),_m(9),_v(" "),_c('p',[_v("Some graphs may have directed edges. In this case, one possible way to model such directed graphs is using a dictionary format / adjacency list:")]),_v(" "),_m(10),_c('p',[_v("One question that comes up is: \"How do we know if the directed graph has a cycle?\"\nWe can use DFS to detect cycles iteratively:")]),_v(" "),_m(11),_c('p',[_v("We can also use Topologcial sort, a graph without cycles will have at least one topological sorted order.")]),_v(" "),_m(12),_m(13),_v(" "),_c('p',[_v("For unweighted graphs, we can simply use BFS to get the shortest path.\n(see above), just keep track of the distance while recursing.")]),_v(" "),_c('p',[_v("For weighted graphs with no negative weight cycles, we need to use Dijkstra's algorithm. Say we have a start node n, Dijkstra first assigns an infinite weight to each node, then iteratively reduces the weight based on the")]),_v(" "),_m(14),_m(15),_v(" "),_c('i',{staticClass:"fa fa-arrow-circle-up fa-lg d-print-none",attrs:{"id":"scroll-top-button","onclick":"handleScrollTop()","aria-hidden":"true"}})],1),_v(" "),_c('overlay-source',{attrs:{"id":"page-nav","tag-name":"nav","to":"page-nav"}},[_c('div',{staticClass:"nav-component slim-scroll"},[_c('a',{pre:true,attrs:{"class":"navbar-brand page-nav-title","href":"#"}},[_v("Topics")]),_v(" "),_c('overlay-source',{staticClass:"nav nav-pills flex-column my-0 small no-flex-wrap",attrs:{"id":"mb-page-nav","tag-name":"nav","to":"mb-page-nav"}},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#graphs"}},[_v("Graphs‚Äé")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#general-structure"}},[_v("General Structure‚Äé")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#breadth-first-search"}},[_v("Breadth First Search‚Äé")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#depth-first-search"}},[_v("Depth First Search‚Äé")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#directed-acyclic-graph-and-topological-sort"}},[_v("Directed Acyclic Graph and Topological Sort‚Äé")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#shortest-path-algorithm"}},[_v("Shortest Path Algorithm‚Äé")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#minimum-spanning-trees"}},[_v("Minimum Spanning Trees‚Äé")])])])],1)]),_v(" "),_c('scroll-top-button')],1),_v(" "),_m(16)])}
};
    var pageVueStaticRenderFns = [function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"graphs"}},[_c('span',{staticClass:"anchor",attrs:{"id":"graphs"}}),_v("Graphs"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#graphs","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"general-structure"}},[_c('span',{staticClass:"anchor",attrs:{"id":"general-structure"}}),_v("General Structure"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#general-structure","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("0: Not Visited")]),_v(" "),_c('li',[_v("1: Visited in previous cycle")]),_v(" "),_c('li',[_v("-1: Visited in this cycle (used for DFS)")])])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("python\n")]),_c('span',[_v("a,b,dis = queue.popleft()\n")]),_c('span',[_v("for row,col in [(a,b-1),(a,b+1),(a-1,b),(a+1,b)]: #4-directional matrix\n")]),_c('span',[_v("    #[(a,b-1),(a,b+1),(a-1,b),(a+1,b),(a+1,b+1),(a+1,b-1),(a-1,b+1),(a-1,b-1)] 8-directional matrix\n")]),_c('span',[_v("    \n")]),_c('span',[_v("    if 0<=row<m and 0<=col<n and visited[row][col]==0:\n")]),_c('span',[_v("        visited[row][col]=1\n")]),_c('span',[_v("        distance[row][col]=dis+1\n")]),_c('span',[_v("        queue.append([row,col,distance[row][col]])\n")])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"breadth-first-search"}},[_c('span',{staticClass:"anchor",attrs:{"id":"breadth-first-search"}}),_v("Breadth First Search"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#breadth-first-search","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("*Time Complexity:  O(V+E)")]),_v(" "),_c('li',[_v("*Space Complexity: O()")])])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("python\n")]),_c('span',[_v("def bfs(visited, graph, node): #function for BFS\n")]),_c('span',[_v("  visited.append(node)\n")]),_c('span',[_v("  queue.append(node)\n")]),_c('span',[_v("\n")]),_c('span',[_v("  while queue:          # Creating loop to visit each node\n")]),_c('span',[_v("    m = queue.pop(0) \n")]),_c('span',[_v("    print (m, end = \" \") \n")]),_c('span',[_v("\n")]),_c('span',[_v("    for neighbour in graph[m]:\n")]),_c('span',[_v("      if neighbour not in visited:\n")]),_c('span',[_v("        visited.append(neighbour)\n")]),_c('span',[_v("        queue.append(neighbour)\n")]),_c('span',[_v("\n")])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"depth-first-search"}},[_c('span',{staticClass:"anchor",attrs:{"id":"depth-first-search"}}),_v("Depth First Search"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#depth-first-search","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("python\n")]),_c('span',[_v("visited = set() # Set to keep track of visited nodes of graph.\n")]),_c('span',[_v("\n")]),_c('span',[_v("def dfs(visited, graph, node):  #function for dfs \n")]),_c('span',[_v("    if node not in visited:\n")]),_c('span',[_v("        print (node)\n")]),_c('span',[_v("        visited.add(node)\n")]),_c('span',[_v("        for neighbour in graph[node]:\n")]),_c('span',[_v("            dfs(visited, graph, neighbour)\n")])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"directed-acyclic-graph-and-topological-sort"}},[_c('span',{staticClass:"anchor",attrs:{"id":"directed-acyclic-graph-and-topological-sort"}}),_v("Directed Acyclic Graph and Topological Sort"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#directed-acyclic-graph-and-topological-sort","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("python\n")]),_c('span',[_v("graph = {\n")]),_c('span',[_v("    'a': ['b', 'e'],\n")]),_c('span',[_v("    'b': ['c', 'd'],\n")]),_c('span',[_v("    'd': ['e']\n")]),_c('span',[_v("}\n")])])])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("python\n")]),_c('span',[_v("def dfs(x):\n")]),_c('span',[_v("\tvis[x] = -1\n")]),_c('span',[_v("\tfor y in digraph[x]:\n")]),_c('span',[_v("\t\tif vis[y] == -1 or (vis[y] == 0 and not dfs(y)):\n")]),_c('span',[_v("\t\t\treturn False\n")]),_c('span',[_v("\tvis[x] = 1\n")]),_c('span',[_v("\treturn True\n")]),_c('span',[_v("\t\n")]),_c('span',[_v("for i in range(numCourses):\n")]),_c('span',[_v("\tif vis[i] == 0 and not dfs(i): return False\n")]),_c('span',[_v("return True\n")])])])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("\n")])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"shortest-path-algorithm"}},[_c('span',{staticClass:"anchor",attrs:{"id":"shortest-path-algorithm"}}),_v("Shortest Path Algorithm"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#shortest-path-algorithm","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("python\n")]),_c('span',[_v("\n")]),_c('span',[_v("\n")])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"minimum-spanning-trees"}},[_c('span',{staticClass:"anchor",attrs:{"id":"minimum-spanning-trees"}}),_v("Minimum Spanning Trees"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#minimum-spanning-trees","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('footer',[_c('div',{staticClass:"text-center"},[_c('small',[_v("[Generated by "),_c('a',{attrs:{"href":"https://markbind.org/"}},[_v("MarkBind 4.1.0")]),_v("]")])])])}
}];
  